SET client_min_messages TO WARNING;
BEGIN;

DROP SCHEMA IF EXISTS $PG_SCHEMA_DIS CASCADE;
CREATE SCHEMA $PG_SCHEMA_DIS;

CREATE TABLE $PG_SCHEMA_DIS.disease (  -- referenced from hypertable
id    SMALLSERIAL PRIMARY KEY,
name  TEXT NOT NULL UNIQUE
);

CREATE TABLE $PG_SCHEMA_DIS.dyn (  -- hypertable
disease_id            INTEGER NOT NULL REFERENCES $PG_SCHEMA_DIS.disease (id) ON DELETE CASCADE ON UPDATE CASCADE,
locale_id             INTEGER NOT NULL REFERENCES $PG_SCHEMA_MAIN.locale (id) ON DELETE CASCADE ON UPDATE CASCADE,
day                   DATE NOT NULL,
day_i                 SMALLINT NOT NULL,  -- day from the beginning of data collection (i.e., 2020.01.22; same for Johns Hopkins University and Covid ActNow)
n_conf                INTEGER,            -- number of confirmed cases                             [Johns Hopkins University]
n_dead                INTEGER,            -- number of deaths                                      [Johns Hopkins University]
n_rec                 INTEGER,            -- number of recovered cases                             [Johns Hopkins University]
case_density          FLOAT,              -- number of cases per 100k; 7-day rolling average       [Covid ActNow]
r0                    FLOAT,              -- the basic reproduction number                         [Covid ActNow]
r0_ci90               FLOAT,              -- the basic reproduction number 90% confidence interval [Covid ActNow]
test_n_pos            INTEGER,            -- number of positive tests                              [Covid ActNow]
test_n_neg            INTEGER,            -- number of negative tests                              [Covid ActNow]
test_r_pos            FLOAT,              -- ratio  of positive tests                              [Covid ActNow]
beds_hosp_cap         INTEGER,            -- number of hospital beds: capacity                     [Covid ActNow]
beds_hosp_usage_tot   INTEGER,            -- number of hospital beds: total usage                  [Covid ActNow]
beds_hosp_usage_covid INTEGER,            -- number of hospital beds: Covid usage                  [Covid ActNow]
beds_icu_cap          INTEGER,            -- number of ICU      beds: capacity                     [Covid ActNow]
beds_icu_usage_tot    INTEGER,            -- number of ICU      beds: total usage                  [Covid ActNow]
beds_icu_usage_covid  INTEGER,            -- number of ICU      beds: Covid usage                  [Covid ActNow]
vax_n_init            INTEGER,            -- number of vaccinations initiated                      [Covid ActNow]
vax_n_done            INTEGER,            -- number of vaccinations completed                      [Covid ActNow]
vax_r_init            FLOAT,              -- ratio  of vaccinations initiated (per locale capita)  [Covid ActNow]
vax_r_done            FLOAT,              -- ratio  of vaccinations completed (per locale capita)  [Covid ActNow]
PRIMARY KEY (disease_id, locale_id, day)  -- https://github.com/timescale/timescaledb/issues/113
);

--CREATE TABLE $PG_SCHEMA_DIS.mcm (  -- medical countermeasures (biologics, drugs, devices)
--);

CREATE TABLE $PG_SCHEMA_DIS.npi_type (  -- referenced from hypertable
id   INTEGER PRIMARY KEY,
name TEXT NOT NULL
);

CREATE TABLE $PG_SCHEMA_DIS.npi (  -- hypertable
disease_id     INTEGER NOT NULL REFERENCES $PG_SCHEMA_DIS.disease (id) ON DELETE CASCADE ON UPDATE CASCADE,
LOCALE_ID      INTEGER NOT NULL REFERENCES $PG_SCHEMA_MAIN.locale (id) ON DELETE CASCADE ON UPDATE CASCADE,
type_id        INTEGER NOT NULL REFERENCES $PG_SCHEMA_DIS.npi_type (id) ON DELETE CASCADE ON UPDATE CASCADE,
begin_date     DATE NOT NULL,
end_date       DATE,
begin_citation TEXT,
begin_note     TEXT,
end_citation   TEXT,
end_note       TEXT,
PRIMARY KEY (disease_id, locale_id, type_id, begin_date)  -- https://github.com/timescale/timescaledb/issues/113
);

SELECT create_hypertable('$PG_SCHEMA_DIS.npi', 'begin_date');
SELECT create_hypertable('$PG_SCHEMA_DIS.dyn', 'day');

CREATE INDEX ON $PG_SCHEMA_DIS.dyn (disease_id, locale_id, day DESC);

--SELECT create_hypertable('$PG_SCHEMA_DIS.dyn', 'd', migrate_data => true);

COMMIT;
